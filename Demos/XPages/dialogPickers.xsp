<?xml version="1.0" encoding="UTF-8"?>
<xp:view
	xmlns:xp="http://www.ibm.com/xsp/core"
	xmlns:xc="http://www.ibm.com/xsp/custom"
	xmlns:xe="http://www.ibm.com/xsp/coreex"
	pageTitle="Bootstrap4XPages | Dialog demo">

	<xc:ccAppLayout>
		<xp:this.facets>
			<xp:div
				xp:key="facetMiddle">

				<legend>Bootstrap dialog</legend>

				<xp:div
					id="dlg"
					styleClass="well well-sm">
					<b>
						Update: The workaround below isn't needed if you use the Bootstrap4XPages plugin (recommended!): you can then just use the standard Dialog control from
						the
						Extension Library:

						<xp:button
							value="Open the dialog"
							styleClass="btn btn-sm btn-info"
							style="margin: 5px"
							id="button1">
							<xp:eventHandler
								event="onclick"
								submit="true"
								refreshMode="partial"
								refreshId="dlg">
								<xp:this.action><![CDATA[#{javascript:getComponent("dialog1").show()}]]></xp:this.action>
							</xp:eventHandler>
						</xp:button>


					</b>
				</xp:div>

				<p>Bootstrap has a component to create a modal dialog, but it doesn't play well with XPages. The Extension Library has a modal
					dialog component that plays well with XPages, but doesn't look like Bootstrap.</p>

				<p>
					<img
						src="modal.png" />
				</p>

				<p>
					Luckily, by changing some properties and little jQuery magic, we can let the
					<b>xe:dialog control</b>
					from the Extension Library look like a Bootstrap dialog, so you'll have the best of both. Here's the sample code.
				</p>

				<p>
					<pre>&lt;xe:dialog id="dialog1" title="Dialog title" styleClass="modal" style="margin-left: inherit;"&gt;

						&lt;xe:this.onShow&gt;
						&lt;![CDATA[//make the dialog look like a Bootstrap dialog using some jQuery magic

						//add the modal-header class
						to the title bar
						var titleBar = $(".modal .dijitDialogTitleBar").addClass("modal-header");

						//replace title node (by default it's a span)
						var titleNode = $(".dijitDialogTitle", titleBar);
						var title = titleNode.text();
						titleNode.remove();

						//add a class to the close icon
						$(".dijitDialogCloseIcon", titleBar).removeClass("dijitDialogCloseIcon").addClass("close");

						//add a new h3 node with the title
						titleBar.append("&lt;h3&gt;" + title + "&lt;/h3&gt;");
						]]&gt;
						&lt;/xe:this.onShow&gt;

						&lt;xe:dialogContent id="dialogContent1"
						styleClass="modal-body"&gt;
						dialog content here
						&lt;/xe:dialogContent&gt;

						&lt;xe:dialogButtonBar id="dialogButtonBar1"
						styleClass="modal-footer"&gt;
						&lt;xp:button value="Close" id="button2"&gt;&lt;/xp:button&gt;
						&lt;/xe:dialogButtonBar&gt;

						&lt;/xe:dialog&gt;</pre>
				</p>

				<p>
					The dialog shown on this page is the standard Dialog
					component from the Extension Library. It has been
					configured to reflect a
					Bootstrap style dialog.
			</p>

				<p>
					<xp:link
						escape="true"
						text="Show dialog"
						id="link2">
						<xp:eventHandler
							event="onclick"
							submit="true"
							refreshMode="partial"
							refreshId="dialog1">
							<xp:this.action><![CDATA[#{javascript:getComponent("dialog1").show();}]]></xp:this.action>
						</xp:eventHandler>
					</xp:link>
				</p>

				<xe:dialog
					id="dialog1"
					title="Your remarks">

					<xe:dialogContent
						id="dialogContent1">
						<xp:panel styleClass="form-horizontal">

							<xp:this.data>
								<xp:dominoDocument
									var="document1"
									formName="fDoc">
								</xp:dominoDocument>
							</xp:this.data>
							<div
								class="form-group">

								<label
									class="col-sm-5 control-label"> Enter your remarks here:
</label>
								<div
									class="col-sm-7">

									<xp:inputTextarea
										id="inputTextarea1"
										value="#{document1.remarks}"></xp:inputTextarea>
								</div>
							</div>

							<div
								class="form-group">
								<label
									class="control-label col-sm-5">
									Pick a date:
</label>
								<div
									class="col-sm-7">
									<xc:ccBS_DatePicker
										fieldDataSource="#{document1}"
										dateFormat="dd-MM-yyyy"
										fieldName="dt">
										<xc:this.options><![CDATA[#{javascript:return {
    daysOfWeekDisabled: "0,6",
    autoclose: true,
    todayBtn: "linked",
    todayHighlight: true
}}]]></xc:this.options>
									</xc:ccBS_DatePicker>
								</div>
							</div>
						</xp:panel>
					</xe:dialogContent>

					<xe:dialogButtonBar
						id="dialogButtonBar1">

						<xp:button
							value="Close"
							id="button2"
							styleClass="btn btn-default">
							<xp:eventHandler
								event="onclick"
								submit="true"
								refreshMode="partial"
								refreshId="dialog1">
								<xp:this.action><![CDATA[#{javascript:getComponent("dialog1").hide()}]]></xp:this.action>
							</xp:eventHandler>
						</xp:button>

						<xp:button
							value="Ok"
							id="button3"
							themeId="Button.Primary">
							<i
								class="glyphicon glyphicon-ok" />
							<xp:eventHandler
								event="onclick"
								submit="true"
								refreshMode="partial"
								refreshId="dialog1">
								<xp:this.action><![CDATA[#{javascript:getComponent("dialog1").hide()}]]></xp:this.action>
							</xp:eventHandler>
						</xp:button>

					</xe:dialogButtonBar>

				</xe:dialog>

				<xc:ccDemoViewSource
					componentName="XPages/dialog.xsp">
				</xc:ccDemoViewSource>

			</xp:div>
		</xp:this.facets>
	</xc:ccAppLayout>

</xp:view>
