<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core">

	<!--
		note: this date picker depends on a number of files: - bootstrap -
		bootstrap-timepicker (http://jdewit.github.com/bootstrap-timepicker/)
		- jquery
	-->


	<xp:text escape="true" id="computedField1" value="#{compositeData.fieldDataSource[compositeData.fieldName]}"
		rendered="#{javascript:!compositeData.fieldDataSource.isEditable()}" style="float:left;">
		<xp:this.converter>
			<xp:convertDateTime type="time" timeStyle="short"></xp:convertDateTime>
		</xp:this.converter>
	</xp:text>

	<xp:div styleClass="input-append bootstrap-timepicker-component" style="float:left;"
	rendered="#{javascript:compositeData.fieldDataSource.isEditable()}">

		<xp:inputText id="${javascript:compositeData.inputId}"
			value="#{compositeData.fieldDataSource[compositeData.fieldName]}"
			required="true" style="width:43px;">
			<xp:this.converter>
				<xp:convertDateTime type="time" timeStyle="short"></xp:convertDateTime>
			</xp:this.converter>
			<xp:this.validators>
				<xp:validateRequired
					message="#{javascript:compositeData.requiredMessage}">
				</xp:validateRequired>
			</xp:this.validators>

			<xp:this.defaultValue><![CDATA[#{javascript:( compositeData.intialDefault != null && compositeData.intialDefault != "" ? compositeData.intialDefault : "19:00" )}]]></xp:this.defaultValue>
			<xp:this.styleClass><![CDATA[#{javascript:"timepicker-default " + compositeData.alternativeIdentifier}]]></xp:this.styleClass>
		</xp:inputText>

		<span class="add-on">
			<i class="glyphicon glyphicon-time"></i>
		</span>
	</xp:div>

<!-- the clientside javascript below is computed since it needs to function in read and edit mode  -->
	<xp:text escape="false" id="computedField2">
		<xp:this.value><![CDATA[#{javascript://default date in the picker: today or the entered value
var itDate:NotesItem = compositeData.fieldDataSource.getDocument().getFirstItem(compositeData.fieldName);
var dt;

if (itDate != null) {
	if (itDate.getDateTimeValue() != null) {
		dt = itDate.getDateTimeValue().toJavaDate();
		dt = (new java.text.SimpleDateFormat( "HH:mm" ) ).format( dt );
	}
} else {
	dt = ( compositeData.intialDefault == null ? "19:00" : compositeData.intialDefault);
}

"<script type=\"text/javascript\">" +
"$(function(){" +
	"x$('" + getClientId( compositeData.inputId ) + "').timepicker( {" +
		"minuteStep: 10 ," +
		"showMeridian: false," +
		"defaultTime:'" + dt + "'" +
	"});" +
"});" +
"</script>";}]]></xp:this.value>
	</xp:text>
</xp:view>